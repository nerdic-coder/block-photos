/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  PhotoType,
} from './models/photo-type';


export namespace Components {
  interface AppAlbums {}
  interface AppPhoto {
    'albumId': string;
    'photoId': string;
    'updateCallback': any;
  }
  interface AppPhotos {
    'albumId': string;
    'photoId': string;
  }
  interface AppRoot {}
  interface AppSettings {}
  interface AppSignin {}
  interface BlockImg {
    'photoId': string;
    'phototType': PhotoType;
    'refresh': number;
    'rotate': boolean;
  }
  interface FilterPopover {
    'selectedPhotos': any[];
  }
  interface SelectAlbum {
    'endCallback': any;
    'selectedPhotos': any[];
    'startCallback': any;
  }
}

declare global {


  interface HTMLAppAlbumsElement extends Components.AppAlbums, HTMLStencilElement {}
  var HTMLAppAlbumsElement: {
    prototype: HTMLAppAlbumsElement;
    new (): HTMLAppAlbumsElement;
  };

  interface HTMLAppPhotoElement extends Components.AppPhoto, HTMLStencilElement {}
  var HTMLAppPhotoElement: {
    prototype: HTMLAppPhotoElement;
    new (): HTMLAppPhotoElement;
  };

  interface HTMLAppPhotosElement extends Components.AppPhotos, HTMLStencilElement {}
  var HTMLAppPhotosElement: {
    prototype: HTMLAppPhotosElement;
    new (): HTMLAppPhotosElement;
  };

  interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {}
  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };

  interface HTMLAppSettingsElement extends Components.AppSettings, HTMLStencilElement {}
  var HTMLAppSettingsElement: {
    prototype: HTMLAppSettingsElement;
    new (): HTMLAppSettingsElement;
  };

  interface HTMLAppSigninElement extends Components.AppSignin, HTMLStencilElement {}
  var HTMLAppSigninElement: {
    prototype: HTMLAppSigninElement;
    new (): HTMLAppSigninElement;
  };

  interface HTMLBlockImgElement extends Components.BlockImg, HTMLStencilElement {}
  var HTMLBlockImgElement: {
    prototype: HTMLBlockImgElement;
    new (): HTMLBlockImgElement;
  };

  interface HTMLFilterPopoverElement extends Components.FilterPopover, HTMLStencilElement {}
  var HTMLFilterPopoverElement: {
    prototype: HTMLFilterPopoverElement;
    new (): HTMLFilterPopoverElement;
  };

  interface HTMLSelectAlbumElement extends Components.SelectAlbum, HTMLStencilElement {}
  var HTMLSelectAlbumElement: {
    prototype: HTMLSelectAlbumElement;
    new (): HTMLSelectAlbumElement;
  };
  interface HTMLElementTagNameMap {
    'app-albums': HTMLAppAlbumsElement;
    'app-photo': HTMLAppPhotoElement;
    'app-photos': HTMLAppPhotosElement;
    'app-root': HTMLAppRootElement;
    'app-settings': HTMLAppSettingsElement;
    'app-signin': HTMLAppSigninElement;
    'block-img': HTMLBlockImgElement;
    'filter-popover': HTMLFilterPopoverElement;
    'select-album': HTMLSelectAlbumElement;
  }
}

declare namespace LocalJSX {
  interface AppAlbums extends JSXBase.HTMLAttributes<HTMLAppAlbumsElement> {}
  interface AppPhoto extends JSXBase.HTMLAttributes<HTMLAppPhotoElement> {
    'albumId'?: string;
    'photoId'?: string;
    'updateCallback'?: any;
  }
  interface AppPhotos extends JSXBase.HTMLAttributes<HTMLAppPhotosElement> {
    'albumId'?: string;
    'photoId'?: string;
  }
  interface AppRoot extends JSXBase.HTMLAttributes<HTMLAppRootElement> {}
  interface AppSettings extends JSXBase.HTMLAttributes<HTMLAppSettingsElement> {}
  interface AppSignin extends JSXBase.HTMLAttributes<HTMLAppSigninElement> {}
  interface BlockImg extends JSXBase.HTMLAttributes<HTMLBlockImgElement> {
    'photoId'?: string;
    'phototType'?: PhotoType;
    'refresh'?: number;
    'rotate'?: boolean;
  }
  interface FilterPopover extends JSXBase.HTMLAttributes<HTMLFilterPopoverElement> {
    'selectedPhotos'?: any[];
  }
  interface SelectAlbum extends JSXBase.HTMLAttributes<HTMLSelectAlbumElement> {
    'endCallback'?: any;
    'selectedPhotos'?: any[];
    'startCallback'?: any;
  }

  interface IntrinsicElements {
    'app-albums': AppAlbums;
    'app-photo': AppPhoto;
    'app-photos': AppPhotos;
    'app-root': AppRoot;
    'app-settings': AppSettings;
    'app-signin': AppSignin;
    'block-img': BlockImg;
    'filter-popover': FilterPopover;
    'select-album': SelectAlbum;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


